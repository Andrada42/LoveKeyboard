<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#F2D0BB"/>
        <Setter Property="Foreground" Value="#704123"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E5BFA6"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D0A78F"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" 
            BasedOn="{StaticResource TitleBarButtonStyle}" 
            TargetType="Button">
        <Setter Property="Foreground" Value="#704123"/>
        <Setter Property="Background" Value="#F2D0BB"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#990000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <!-- Proprietati definite de noi -->
        <!-- Ele exista de fapt dar le folosim cu alt scop -->
        <!-- Posibile probleme? -->
        <Setter Property="Tag" Value="pack://application:,,,/Images/files.png"/> <!-- imagine default -->
        <Setter Property="Content" Value="#704123"/>

        <Setter Property="Background" Value="#F2D0BB"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Setam un grid al imaginii + un dreptunghi cu efectul dorit la hover/click-->
                    <Grid>
                        <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="Uniform" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"/>
                        <Rectangle x:Name="HoverOverlay" Fill="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Grid>

                    <!-- Animatii fade in/out -->
                    <ControlTemplate.Triggers>
                        <!-- hover și not pressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.5"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!-- pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.2"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <!-- Dacă e cazul de hover, opacitatea revine la 0.5, altfel la 0 -->
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0.5"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmojiStyle" 
            TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe UI Emoji"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#F2D0BB"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#E0B5A0"/>
                        </Trigger>
                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#C68C75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeEmojiStyle"
            BasedOn="{StaticResource EmojiStyle}"
            TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="47"/>
    </Style>
    
</ResourceDictionary>